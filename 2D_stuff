.include "C:\Users\Kevin\Desktop\50002\nominal.jsim"
.include "C:\Users\Kevin\Desktop\50002\stdcell.jsim"
.include "C:\Users\Kevin\Desktop\50002\2dcheckoff_100ns.jsim"

.subckt or a b z
Xnor1 a b 1 nor2
Xinv4 1 z inverter
.ends

.subckt xor a b z 
Xnand1_xor a b 1 nand2
Xnand2_xor a 1 2 nand2
Xnand3_xor b 1 3 nand2
Xnand4_xor 2 3 z nand2
.ends

.subckt and a b z 
Xnand5_xor a b 1 nand2
Xinv 1 z inverter
.ends



.subckt zchecker S[31:0] z

Xor_no1 S0 S1 1 or
Xor_no2 S2 S3 2 or 
Xor_no3 S4 S5 3 or
Xor_no4 S6 S7 4 or
Xor_no5 S8 S9 5 or
Xor_no6 S10 S11 6 or
Xor_no7 S12 S13 7 or 
Xor_no8 S14 S15 8 or 
Xor_no9 S16 S17 9 or
Xor_no10 S18 S19 10 or
Xor_no11 S20 S21 11 or
Xor_no12 S22 S23 12 or
Xor_no13 S24 S25 13 or
Xor_no14 S26 S27 14 or
Xor_no15 S28 S29 15 or
Xor_no16 S30 S31 16 or

Xor_no17 1 2 17 or
Xor_no18 3 4 18 or
Xor_no19 5 6 19 or
Xor_no20 7 8 20 or
Xor_no21 9 10 21 or
Xor_no22 11 12 22 or
Xor_no23 13 14 23 or
Xor_no24 15 16 24 or

Xor_no25 17 18 25 or
Xor_no26 19 20 26 or
Xor_no27 21 22 27 or
Xor_no28 23 24 28 or

Xor_no29 25 26 29 or
Xor_no30 27 28 30 or

Xnor_final 29 30 z nor2

.ends


.subckt vchecker op0 B31 A31 S31 V

Xxor1 op0 B31 1 xor
Xand1 1 A31 2 and
Xinv1 S31 3 inverter 
Xand2 2 3 4 and
Xinv2 1 5 inverter
Xinv3 A31 6 inverter
Xand3 5 6 7 and
Xand4 7 S31 8 and2
Xor1 4 8 V or

.ends

* FA: 1-bit Full Adder circuit
* Input: a, b, ci 
* Output: s, co
.subckt FA a b ci s co
* write your FA circuitry here
* BEGIN ANSWER

Xid1 a b 1 xor
Xid2 1 ci s xor
Xid3 1 ci 2 nand2
Xid4 2 3 inverter 
Xid5 a b 4 nand2
Xid6 4 5 inverter 
Xid7 3 5 6 nor2
Xid8 6 co inverter 

*END ANSWER
.ends


*.subckt FA a b ci s co


.subckt bigmux2_input ci A[1:0] B[1:0] S[1:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 

XFA1_bottom A0 B0 vdd 5 6 FA 
XFA2_bottom A1 B1 6 7 8 FA 

Xsmallmux1 ci 11 5 100 mux2
.connect 100 S0
Xsmallmux2 ci 3 7 101 mux2
.connect 101 S1
XBigMux1 ci 4 8 10 mux2 
.connect 10 cout 
.ends


.subckt bigmux3_input ci A[2:0] B[2:0] S[2:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 
XFA3_top A2 B2 4 5 6 FA 

XFA1_bottom A0 B0 vdd 7 8 FA 
XFA2_bottom A1 B1 8 9 10 FA
XFA3_bottom A2 B2 10 12 13 FA  

Xsmallmux1 ci 11 7 100 mux2
.connect 100 S0
Xsmallmux2 ci 3 9 101 mux2
.connect 101 S1
Xsmallmux3 ci 5 12 102 mux2
.connect 102 S2
XBigMux1 ci 6 13 103 mux2
.connect 103 cout 

.ends

.subckt bigmux4_input ci A[3:0] B[3:0] S[3:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 
XFA3_top A2 B2 4 5 6 FA 
XFA4_top A3 B3 6 7 8 FA 

XFA1_bottom A0 B0 vdd 9 10 FA 
XFA2_bottom A1 B1 10 12 13 FA
XFA3_bottom A2 B2 13 14 15 FA 
XFA4_bottom A3 B3 15 16 17 FA  

Xsmallmux1 ci 11 9 100 mux2
.connect 100 S0
Xsmallmux2 ci 3 12 101 mux2
.connect 101 S1
Xsmallmux3 ci 5 14 102 mux2
.connect 102 S2
Xsmallmux4 ci 7 16 103 mux2
.connect 103 S3
XBigMux1 ci 8 17 104 mux2
.connect 104 cout 

.ends

.subckt bigmux5_input ci A[4:0] B[4:0] S[4:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 
XFA3_top A2 B2 4 5 6 FA 
XFA4_top A3 B3 6 7 8 FA 
XFA5_top A4 B4 8 9 10 FA 

XFA1_bottom A0 B0 vdd 12 13 FA 
XFA2_bottom A1 B1 13 14 15 FA
XFA3_bottom A2 B2 15 16 17 FA 
XFA4_bottom A3 B3 17 18 19 FA
XFA5_bottom A4 B4 19 20 21 FA  

Xsmallmux1 ci 11 12 100 mux2
.connect 100 S0
Xsmallmux2 ci 3 14 101 mux2
.connect 101 S1
Xsmallmux3 ci 5 16 102 mux2
.connect 102 S2
Xsmallmux4 ci 7 18 103 mux2
.connect 103 S3
Xsmallmux5 ci 9 20 104 mux2
.connect 104 S4
XBigMux1 ci 10 21 105 mux2 
.connect 105 cout 

.ends

.subckt bigmux6_input ci A[5:0] B[5:0] S[5:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 
XFA3_top A2 B2 4 5 6 FA 
XFA4_top A3 B3 6 7 8 FA 
XFA5_top A4 B4 8 9 10 FA
XFA6_top A5 B5 10 12 13 FA  

XFA1_bottom A0 B0 vdd 14 15 FA 
XFA2_bottom A1 B1 15 16 17 FA
XFA3_bottom A2 B2 17 18 19 FA 
XFA4_bottom A3 B3 19 20 21 FA
XFA5_bottom A4 B4 21 22 23 FA 
XFA6_bottom A5 B5 23 24 25 FA

Xsmallmux1 ci 11 14 S0 mux2
Xsmallmux2 ci 3 16 S1 mux2
Xsmallmux3 ci 5 18 S2 mux2
Xsmallmux4 ci 7 20 S3 mux2
Xsmallmux5 ci 9 22 S4 mux2
Xsmallmux6 ci 12 24 S5 mux2
XBigMux1 ci 13 25 100 mux2
.connect 100 cout 

.ends

.subckt bigmux7_input ci A[6:0] B[6:0] S[6:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 
XFA3_top A2 B2 4 5 6 FA 
XFA4_top A3 B3 6 7 8 FA 
XFA5_top A4 B4 8 9 10 FA
XFA6_top A5 B5 10 12 13 FA 
XFA7_top A6 B6 13 14 15 FA 

XFA1_bottom A0 B0 vdd 16 17 FA 
XFA2_bottom A1 B1 17 18 19 FA
XFA3_bottom A2 B2 19 20 21 FA 
XFA4_bottom A3 B3 21 22 23 FA
XFA5_bottom A4 B4 23 24 25 FA 
XFA6_bottom A5 B5 25 26 27 FA
XFA7_bottom A6 B6 27 28 29 FA 

Xsmallmux1 ci 11 16 S0 mux2
Xsmallmux2 ci 3 18 S1 mux2
Xsmallmux3 ci 5 20 S2 mux2
Xsmallmux4 ci 7 22 S3 mux2
Xsmallmux5 ci 9 24 S4 mux2
Xsmallmux6 ci 12 26 S5 mux2
Xsmallmux7 ci 14 28 S6 mux2
XBigMux1 ci 15 29 100 mux2 
.connect 100 cout 

.ends

*.subckt bigmux6_input ci A[5:0] B[5:0] S[5:0] cout

.subckt adder32 op0 A[31:0] B[31:0] S[31:0] z v n

 
XFA1 A0 B0 op0 S0 1 FA 
XFA2 A1 B1 1 S1 2 FA 

Xbigmux1 2 A[3:2] B[3:2] S[3:2] 3 bigmux2_input
Xbigmux2 3 A[6:4] B[6:4] S[6:4] 4 bigmux3_input 
Xbigmux3 4 A[9:7] B[9:7] S[9:7] 5 bigmux3_input
Xbigmux4 5 A[13:10] B[13:10] S[13:10] 6 bigmux4_input  
Xbigmux5 6 A[18:14] B[18:14] S[18:14] 7 bigmux5_input 
Xbigmux6 7 A[24:19] B[24:19] S[24:19] 8 bigmux6_input 
Xbigmux7 8 A[31:25] B[31:25] S[31:25] 9 bigmux7_input 

.connect n S31
Xzchecker S[31:0] z zchecker
Xvchecker op0 B31 A31 S31 v vchecker

.ends 





