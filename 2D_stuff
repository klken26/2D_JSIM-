.include "C:\Users\Kevin\Desktop\50002\nominal.jsim"
.include "C:\Users\Kevin\Desktop\50002\stdcell.jsim"
.include "C:\Users\Kevin\Desktop\50002\2dcheckoff_100ns.jsim"

.subckt or a b z
Xnor1 a b 1 nor2
Xinv4 1 z inverter
.ends


.subckt xor a b z 
Xnand1_xor a b 1 nand2
Xnand2_xor a 1 2 nand2
Xnand3_xor b 1 3 nand2
Xnand4_xor 2 3 z nand2
.ends


.subckt and a b z 
Xnand5_xor a b 1 nand2
Xinv 1 z inverter
.ends


.subckt mux2a selector d0 d1 output
Xinv1 selector 1 inverter 
Xnand1 1 d0 2 nand2
Xnand2 selector d1 3 nand2
Xnand3 2 3 output nand2
.ends 


.subckt vchecker op0 B31 A31 S31 V
Xxor1 op0 B31 1 xor
Xand1 1 A31 2 and
Xinv1 S31 3 inverter 
Xand2 2 3 4 and2
Xinv2 1 5 inverter
Xinv3 A31 6 inverter
Xand3 5 6 7 and
Xand4 7 S31 8 and
Xor1 4 8 V or 
.ends


.subckt and_3 a b c z
Xid1 a b c 1 nand3
Xid2 1 z inverter
.ends


.subckt zchecker S[31:0] z
Xlayer_1 S[31:16] S[15:0] layer_1[15:0] or
Xlayer_2 layer_1[15:8] layer_1[7:0] layer_2[7:0] or
Xlayer_3 layer_2[7:4] layer_2[3:0] layer_3[3:0] or
Xlayer_4 layer_3[3:2] layer_3[1:0] layer_4[1:0] or
Xz_inv layer_40 layer_41 z nor2
.ends


* FA: 1-bit Full Adder circuit
* Input: a, b, ci 
* Output: s, co
.subckt FA a b ci s co
* write your FA circuitry here
* BEGIN ANSWER

Xid1 a b 1 xor
Xid2 1 ci s xor
Xid3 1 ci 2 nand2
Xid4 2 3 inverter 
Xid5 a b 4 nand2
Xid6 4 5 inverter 
Xid7 3 5 6 nor2
Xid8 6 co inverter 

*END ANSWER
.ends


.subckt bigmux2_input ci A[1:0] B[1:0] S[1:0] cout 

XFA1_top A0 B0 0 11 2 FA 
XFA2_top A1 B1 2 3 4 FA 
XFA1_bottom A0 B0 vdd 5 6 FA 
XFA2_bottom A1 B1 6 7 8 FA 
Xsmallmux1 ci 11 5 100 mux2
.connect 100 S0
Xsmallmux2 ci 3 7 101 mux2
.connect 101 S1
XBigMux1 ci 4 8 10 mux2
.connect 10 cout 

.ends


.subckt bigmux3_input ci A[2:0] B[2:0] S[2:0] cout 

XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[2:1] B[2:1] C[1:0] K[2:1] C[2:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[2:1] B[2:1] J[1:0] I[2:1] J[2:1] FA

Xsmallmuxes ci#03 K[0:2] I[0:2] S[0:2] mux2
XBigMux1 ci C2 J2 103 mux2
.connect 103 cout 

.ends



.subckt bigmux4_input ci A[3:0] B[3:0] S[3:0] cout 

XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[3:1] B[3:1] C[2:0] K[3:1] C[3:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[3:1] B[3:1] J[2:0] I[3:1] J[3:1] FA

Xsmallmuxes ci#04 K[0:3] I[0:3] S[0:3] mux2
XBigMux1 ci C3 J3 104 mux2
.connect 104 cout 

.ends



.subckt bigmux5_input ci A[4:0] B[4:0] S[4:0] cout 

XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[4:1] B[4:1] C[3:0] K[4:1] C[4:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[4:1] B[4:1] J[3:0] I[4:1] J[4:1] FA

Xsmallmuxes ci#05 K[0:4] I[0:4] S[0:4] mux2
XBigMux1 ci C4 J4 105 mux2
.connect 105 cout 

.ends



.subckt bigmux6_input ci A[5:0] B[5:0] S[5:0] cout 

XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[5:1] B[5:1] C[4:0] K[5:1] C[5:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[5:1] B[5:1] J[4:0] I[5:1] J[5:1] FA

Xsmallmuxes ci#06 K[0:5] I[0:5] S[0:5] mux2
XBigMux1 ci C5 J5 106 mux2
.connect 106 cout 

.ends



.subckt bigmux7_input ci A[6:0] B[6:0] S[6:0] cout 

XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[6:1] B[6:1] C[5:0] K[6:1] C[6:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[6:1] B[6:1] J[5:0] I[6:1] J[6:1] FA

Xsmallmuxes ci#07 K[0:6] I[0:6] S[0:6] mux2
XBigMux1 ci C6 J6 107 mux2
.connect 107 cout 

.ends



.subckt bigmux9_input ci A[8:0] B[8:0] S[8:0] cout 

XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[8:1] B[8:1] C[7:0] K[8:1] C[8:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[8:1] B[8:1] J[7:0] I[8:1] J[8:1] FA

Xsmallmuxes ci#09 K[0:8] I[0:8] S[0:8] mux2
XBigMux1 ci C8 J8 109 mux2 
.connect 109 cout 

.ends



.subckt bigmux11_input ci A[10:0] B[10:0] S[10:0] cout 


XFA1_top A0 B0 0 K0 C0 FA 
XA_restontop A[10:1] B[10:1] C[9:0] K[10:1] C[10:1] FA

XFA1_bottom A0 B0 vdd I0 J0 FA   
XA_restonbottom A[10:1] B[10:1] J[9:0] I[10:1] J[10:1] FA

Xsmallmuxes ci#11 K[0:10] I[0:10] S[0:10] mux2
XBigMux1 ci C10 J10 111 mux2
.connect 111 cout

.ends


*.subckt FA a b ci s co
*.subckt bigmux9_input ci A[8:0] B[8:0] S[8:0] cout 

.subckt adder32 op0 A[31:0] B[31:0] S[31:0] z v n

xor_b B[31:0] op0#32 xb[31:0] xor
*Xbit0 A0 xb0 op0 S0 C0 FA
*Xbit_therest A[31:1] xb[31:1] C[30:0] S[31:1] C[31:1] FA

*XFA1 A0 xb0 op0 S0 C0 FA 
*XFA_therest A[4:1] xb[4:1] C[3:0] S[4:1] C[4:1] FA 

XFA1 A0 xb0 op0 S0 C0 FA 
XFA2 A1 xb1 C0 S1 2 FA 

Xbigmux1 2 A[3:2] xb[3:2] S[3:2] 3 bigmux2_input
Xbigmux2 3 A[6:4] xb[6:4] S[6:4] 4 bigmux3_input
Xbigmux3 4 A[9:7] xb[9:7] S[9:7] 5 bigmux3_input
Xbigmux4 5 A[13:10] xb[13:10] S[13:10] 6 bigmux4_input 
Xbigmux5 6 A[18:14] xb[18:14] S[18:14] 7 bigmux5_input
Xbigmux6 7 A[24:19] xb[24:19] S[24:19] 8 bigmux6_input 
Xbigmux7 8 A[31:25] xb[31:25] S[31:25] 9 bigmux7_input  
 

Xnots31 S31 nots31 inverter 
Xnotxb31 xb31 notxb31 inverter
Xnota31 A31 nota31 inverter 
Xnegnegpos A31 xb31 nots31 negnegpos and_3
Xposposneg nota31 notxb31 S31 posposneg and_3
Xv_unit posposneg negnegpos v or

.connect n S31
Xzchecker S[31:0] z zchecker

.ends 


*4.199 ns 
*Xbigmux1 2 A[3:2] xb[3:2] S[3:2] 3 bigmux2_input
*Xbigmux2 3 A[6:4] xb[6:4] S[6:4] 4 bigmux3_input
*Xbigmux3 4 A[9:7] xb[9:7] S[9:7] 5 bigmux3_input
*Xbigmux4 5 A[13:10] xb[13:10] S[13:10] 6 bigmux4_input 
*Xbigmux5 6 A[18:14] xb[18:14] S[18:14] 7 bigmux5_input
*Xbigmux6 7 A[24:19] xb[24:19] S[24:19] 8 bigmux6_input 
*Xbigmux7 8 A[31:25] xb[31:25] S[31:25] 9 bigmux7_input 
*
*
*
*4.21ns
*Xbigmux1 2 A[3:2] xb[3:2] S[3:2] 3 bigmux2_input
*Xbigmux2 3 A[7:4] xb[7:4] S[7:4] 6 bigmux4_input
*Xbigmux3 6 A[12:8] xb[12:8] S[12:8] 7 bigmux5_input
*Xbigmux4 7 A[18:13] xb[18:13] S[18:13] 8 bigmux6_input 
*Xbigmux5 8 A[24:19] xb[24:19] S[24:19] 9 bigmux6_input 
*Xbigmux6 9 A[31:25] xb[31:25] S[31:25] 10 bigmux7_input 
*
*Xnots31 S31 nots31 inverter 
*Xnotxb31 xb31 notxb31 inverter
*Xnota31 A31 nota31 inverter 
*Xnegnegpos A31 xb31 nots31 negnegpos and_3
*Xposposneg nota31 notxb31 S31 posposneg and_3
*Xv_unit posposneg negnegpos v or
*
*
*
*
*
*






