.include "C:\Users\Kevin\Desktop\50002\50002\nominal.jsim"
.include "C:\Users\Kevin\Desktop\50002\50002\stdcell.jsim"
.include "C:\Users\Kevin\Desktop\50002\50002_JSIMcheckoff_file_timing\2dcheckoff_XX.jsim"


* 2-input xor: inputs are a and b, output is z
.subckt xor2 a b z 
Xnand1_xor a b 1 nand2
Xnand2_xor a 1 2 nand2
Xnand3_xor b 1 3 nand2
Xnand4_xor 2 3 z nand2
.ends

.subckt and2 a b z 
Xnand5_xor a b 1 nand2
Xinv 1 z inverter
.ends

.subckt and3 a b c z
Xand12312 a b c 1 nand3
Xinv2 1 z inverter
.ends

.subckt and4 a b c d z
Xand343 a b c d 1 nand4
Xinv3 1 z inverter
.ends

.subckt or2 a b z
Xnor1 a b z nor2
Xinv4 1 z inverter
.ends

.subckt or3 a b c z
Xnor2 a b c z nor3
Xinv5 1 z inverter
.ends

.subckt or4 a b c d z
Xnor3 a b c d z nor4
Xinv6 1 z inverter
.ends



.subckt adder8 ci A[7:0] B[7:0] S[7:0] cout

*inputs to the circuit - p is xor, g is and

Xg0 A0 B0 2 and2
Xp0 A0 B0 3 xor2

Xg1 A1 B1 4 and2
Xp1 A1 B1 5 xor2

Xg2 A2 B2 6 and2
Xp2 A2 B2 7 xor2

Xg3 A3 B3 8 and2
Xp3 A3 B3 9 xor2

Xg4 A4 B4 10 and2
Xp4 A4 B4 11 xor2

Xg5 A5 B5 12 and2
Xp5 A5 B5 13 xor2

Xg6 A6 B6 14 and2
Xp6 A6 B6 15 xor2

Xg7 A7 B7 16 and2
Xp7 A7 B7 17 xor2

*inputs end


*S0 circuit start

XS0 ci 3 S0 xor2

*S0 circuit end 


*S1 circuit start 

Xand1 ci 3 18 and2
Xor1 18 2 19 or2 
XS1 19 5 S1 xor2

*S1 circuit end


*S2 circuit start

Xand2 ci 5 2 20 and3
Xand3 2 5 21 and2
Xor2 20 21 4 22 or3
XS2 22 7 S2 xor2 

*S2 circuit end 


*S3 circuit start

Xand4 ci 3 5 7 23 and4
Xand5 2 5 7 24 and3
Xand6 4 7 25 and2
Xor3 23 24 25 6 26 or4 *26 is important value, carry over to other S circuit. take note. 
XS3 26 8 S3 xor2 

*S3 circuit end


*S4 circuit start 

Xand7 26 9 27 and2
Xor4 27 8 28 or2       *28 is important value, carry over to other S circuit. take note.
XS4 28 11 S4 xor2 

*S4 circuit end 


*S5 circuit start

Xand8 26 9 11 29 and3 
Xand9 8 11 30 and2
Xor5 29 30 10 31 or3 
XS5 31 13 S5 xor2 

*S5 circuit end 


*S6 circuit start

Xand10 28 11 13 32 and2
Xand11 10 13 33 and2 
Xor6 32 33 12 34 or3 
XS6 34 15 S6 xor2  

*S6 circuit end


*S7 circuit start

Xand12 28 11 12 15 35 and4
Xand13 10 13 15 36 and3 
Xand14 13 15 37 and2
Xor7 35 36 37 14 38 or4  *38 is important value, carry over to other S circuit. take note.
XS7 38 17 S7 xor2 

*S7 circuit end 


*cout circuit start

Xand15 38 17 39 and2
Xor_out 39 16 cout or2

*cout circuit end


.ends




.subckt adder32 op0 A[31:0] B[31:0] S[31:0] z v n
... your circuit here ...

.ends

